<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="productos.servicies.ProductoServiceImplTest" tests="19" skipped="0" failures="0" errors="0" timestamp="2024-04-28T17:54:54" hostname="LAPTOP-3NHV45U1" time="1.387">
  <properties/>
  <testcase name="findComplementoById()" classname="productos.servicies.ProductoServiceImplTest" time="0.368"/>
  <testcase name="findComplementoByNombre()" classname="productos.servicies.ProductoServiceImplTest" time="0.018"/>
  <testcase name="updateButaca()" classname="productos.servicies.ProductoServiceImplTest" time="0.082"/>
  <testcase name="findButacaById throws ButacaNotFoundException()" classname="productos.servicies.ProductoServiceImplTest" time="0.029"/>
  <testcase name="findButacaById()" classname="productos.servicies.ProductoServiceImplTest" time="0.029"/>
  <testcase name="updateComplemento()" classname="productos.servicies.ProductoServiceImplTest" time="0.028"/>
  <testcase name="findComplementoByNombre throws ComplementoNotFoundException()" classname="productos.servicies.ProductoServiceImplTest" time="0.015"/>
  <testcase name="findAllComplementos()" classname="productos.servicies.ProductoServiceImplTest" time="0.444"/>
  <testcase name="findComplementoById throws ComplementoNotFoundException()" classname="productos.servicies.ProductoServiceImplTest" time="0.023"/>
  <testcase name="deleteComplementoFisico()" classname="productos.servicies.ProductoServiceImplTest" time="0.05"/>
  <testcase name="findAllButacas()" classname="productos.servicies.ProductoServiceImplTest" time="0.012"/>
  <testcase name="saveButaca()" classname="productos.servicies.ProductoServiceImplTest" time="0.03"/>
  <testcase name="deleteComplementoLogico()" classname="productos.servicies.ProductoServiceImplTest" time="0.036"/>
  <testcase name="deleteButacaFisico()" classname="productos.servicies.ProductoServiceImplTest" time="0.036"/>
  <testcase name="saveButaca throws ButacaNotSavedException()" classname="productos.servicies.ProductoServiceImplTest" time="0.014"/>
  <testcase name="deleteButacaLogico()" classname="productos.servicies.ProductoServiceImplTest" time="0.015"/>
  <testcase name="defaultListButacas()" classname="productos.servicies.ProductoServiceImplTest" time="0.01"/>
  <testcase name="saveComplemento()" classname="productos.servicies.ProductoServiceImplTest" time="0.019"/>
  <testcase name="saveComplemento throws ComplementoNotSavedException()" classname="productos.servicies.ProductoServiceImplTest" time="0.012"/>
  <system-out><![CDATA[19:54:53.426 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#1
19:54:53.813 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#2
19:54:54.261 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#3
19:54:54.313 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#4
19:54:54.362 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#5
19:54:54.414 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#6
19:54:54.825 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoCache#4#7
19:54:54.857 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#5#8
19:54:54.919 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Unit name=child of mockComplementoCache#4#9
19:54:54.925 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Buscando complemento por id A1...
19:54:54.933 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering null on ComplementoCache(mockComplementoCache#4).get(A1)
19:54:54.934 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Complemento(id: 1, nombre: Palomitas, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ComplementoRepository(mockComplementoRepository#5).findById(A1)
19:54:54.936 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering kotlin.Unit on ComplementoCache(mockComplementoCache#4).put(A1, Complemento(id: 1, nombre: Palomitas, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:54.961 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#10
19:54:54.961 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#11
19:54:54.962 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#12
19:54:54.962 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#13
19:54:54.963 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#14
19:54:54.964 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#15
19:54:54.973 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#14#16
19:54:54.975 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Buscando complemento por nombre Palomitas...
19:54:54.977 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Complemento(id: 1, nombre: Palomitas, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ComplementoRepository(mockComplementoRepository#14).findByNombre(Palomitas)
19:54:54.986 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#17
19:54:54.987 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#18
19:54:54.987 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#19
19:54:54.988 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#20
19:54:54.988 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#21
19:54:54.989 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#22
19:54:55.046 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaRepository#18#23
19:54:55.055 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Unit name=child of mockButacaCache#17#24
19:54:55.056 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Actualizando butaca con id A1
19:54:55.057 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Butaca(id: A1, nombre: Butaca-Update, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: OCUPADA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ButacaRepository(mockButacaRepository#18).update(A1, Butaca(id: A1, nombre: Butaca-Update, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: OCUPADA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.058 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering kotlin.Unit on ButacaCache(mockButacaCache#17).put(A1, Butaca(id: A1, nombre: Butaca-Update, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: OCUPADA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.075 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#25
19:54:55.075 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#26
19:54:55.076 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#27
19:54:55.077 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#28
19:54:55.077 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#29
19:54:55.078 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#30
19:54:55.085 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaCache#25#31
19:54:55.090 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaRepository#26#32
19:54:55.095 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Buscando butaca por id A9...
19:54:55.095 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering null on ButacaCache(mockButacaCache#25).get(A9)
19:54:55.097 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Throwing org.example.productos.exceptions.ButacaExceptions$ButacaNotFoundException: Error al buscar butaca por id A9 on ButacaRepository(mockButacaRepository#26).findById(A9)
19:54:55.110 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#33
19:54:55.110 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#34
19:54:55.111 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#35
19:54:55.111 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#36
19:54:55.112 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#37
19:54:55.112 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#38
19:54:55.120 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaCache#33#39
19:54:55.125 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaRepository#34#40
19:54:55.129 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Unit name=child of mockButacaCache#33#41
19:54:55.130 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Buscando butaca por id A1...
19:54:55.131 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering null on ButacaCache(mockButacaCache#33).get(A1)
19:54:55.132 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ButacaRepository(mockButacaRepository#34).findById(A1)
19:54:55.134 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering kotlin.Unit on ButacaCache(mockButacaCache#33).put(A1, Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.146 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#42
19:54:55.147 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#43
19:54:55.147 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#44
19:54:55.148 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#45
19:54:55.149 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#46
19:54:55.150 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#47
19:54:55.156 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#46#48
19:54:55.160 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Unit name=child of mockComplementoCache#45#49
19:54:55.161 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Actualizando complemento con id 1
19:54:55.162 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Complemento(id: 1, nombre: Palomitas-Updated, tipo: Complemento, precio: 2.0, stock: 10, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ComplementoRepository(mockComplementoRepository#46).update(1, Complemento(id: 1, nombre: Palomitas-Updated, tipo: Complemento, precio: 2.0, stock: 10, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.165 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering kotlin.Unit on ComplementoCache(mockComplementoCache#45).put(1, Complemento(id: 1, nombre: Palomitas-Updated, tipo: Complemento, precio: 2.0, stock: 10, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.181 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#50
19:54:55.181 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#51
19:54:55.182 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#52
19:54:55.183 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#53
19:54:55.184 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#54
19:54:55.186 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#55
19:54:55.195 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#54#56
19:54:55.196 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Buscando complemento por nombre Agua...
19:54:55.197 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Throwing org.example.productos.exceptions.ComplementoExceptions$ComplementoNotFoundException: Error al buscar complemento por nombre Agua on ComplementoRepository(mockComplementoRepository#54).findByNombre(Agua)
19:54:55.208 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#57
19:54:55.209 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#58
19:54:55.209 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#59
19:54:55.210 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#60
19:54:55.210 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#61
19:54:55.211 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#62
19:54:55.631 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for List name=child of mockComplementoRepository#61#63
19:54:55.632 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Buscando todos los complementos...
19:54:55.633 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering [Complemento(id: 1, nombre: Palomitas, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false)] on ComplementoRepository(mockComplementoRepository#61).findAll()
19:54:55.660 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#64
19:54:55.661 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#65
19:54:55.661 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#66
19:54:55.662 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#67
19:54:55.662 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#68
19:54:55.662 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#69
19:54:55.669 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoCache#67#70
19:54:55.674 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#68#71
19:54:55.675 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Buscando complemento por id 9...
19:54:55.677 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering null on ComplementoCache(mockComplementoCache#67).get(9)
19:54:55.677 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Throwing org.example.productos.exceptions.ComplementoExceptions$ComplementoNotFoundException: Error al buscar complemento por id 9 on ComplementoRepository(mockComplementoRepository#68).findById(9)
19:54:55.687 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#72
19:54:55.687 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#73
19:54:55.688 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#74
19:54:55.688 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#75
19:54:55.689 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#76
19:54:55.689 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#77
19:54:55.710 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#76#78
19:54:55.714 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoCache#75#79
19:54:55.715 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Borrando complemento con id 1
19:54:55.716 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Complemento(id: 1, nombre: Palomitas-Deleted, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ComplementoRepository(mockComplementoRepository#76).delete(1, false)
19:54:55.717 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Complemento(id: 1, nombre: Palomitas-Deleted, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ComplementoCache(mockComplementoCache#75).remove(1)
19:54:55.743 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#80
19:54:55.744 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#81
19:54:55.745 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#82
19:54:55.745 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#83
19:54:55.745 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#84
19:54:55.746 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#85
19:54:55.753 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for List name=child of mockButacaRepository#81#86
19:54:55.754 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Buscando todas las butacas...
19:54:55.754 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering [Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false)] on ButacaRepository(mockButacaRepository#81).findAll()
19:54:55.761 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#87
19:54:55.761 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#88
19:54:55.762 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#89
19:54:55.762 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#90
19:54:55.763 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#91
19:54:55.763 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#92
19:54:55.774 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaRepository#88#93
19:54:55.778 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Unit name=child of mockButacaCache#87#94
19:54:55.780 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Guardando butaca Butaca(id: A2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false)
19:54:55.781 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Butaca(id: A2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ButacaRepository(mockButacaRepository#88).save(Butaca(id: A2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.782 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering kotlin.Unit on ButacaCache(mockButacaCache#87).put(A2, Butaca(id: A2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.797 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#95
19:54:55.799 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#96
19:54:55.799 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#97
19:54:55.800 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#98
19:54:55.801 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#99
19:54:55.802 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#100
19:54:55.820 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#99#101
19:54:55.824 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoCache#98#102
19:54:55.826 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Borrando complemento con id 1
19:54:55.826 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Complemento(id: 1, nombre: Palomitas-Deleted, tipo: Complemento, precio: 2.0, stock: 10, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: true) on ComplementoRepository(mockComplementoRepository#99).delete(1, true)
19:54:55.828 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Complemento(id: 1, nombre: Palomitas-Deleted, tipo: Complemento, precio: 2.0, stock: 10, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: true) on ComplementoCache(mockComplementoCache#98).remove(1)
19:54:55.843 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#103
19:54:55.844 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#104
19:54:55.844 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#105
19:54:55.844 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#106
19:54:55.844 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#107
19:54:55.844 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#108
19:54:55.855 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaRepository#104#109
19:54:55.858 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaCache#103#110
19:54:55.860 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Borrando butaca con id A1
19:54:55.860 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Butaca(id: A1, nombre: Butaca-Deleted, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ButacaRepository(mockButacaRepository#104).delete(A1, false)
19:54:55.861 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Butaca(id: A1, nombre: Butaca-Deleted, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ButacaCache(mockButacaCache#103).remove(A1)
19:54:55.883 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#111
19:54:55.884 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#112
19:54:55.884 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#113
19:54:55.885 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#114
19:54:55.886 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#115
19:54:55.887 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#116
19:54:55.895 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaRepository#112#117
19:54:55.898 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Guardando butaca Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false)
19:54:55.898 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Throwing org.example.productos.exceptions.ButacaExceptions$ButacaNotSavedException: Error al guardar butaca Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ButacaRepository(mockButacaRepository#112).save(Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.906 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#118
19:54:55.906 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#119
19:54:55.906 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#120
19:54:55.908 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#121
19:54:55.908 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#122
19:54:55.908 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#123
19:54:55.914 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaRepository#119#124
19:54:55.915 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Butaca name=child of mockButacaCache#118#125
19:54:55.915 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Borrando butaca con id A1
19:54:55.916 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: true) on ButacaRepository(mockButacaRepository#119).delete(A1, true)
19:54:55.916 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 0, columna: 0, tipoButaca: VIP, estadoButaca: MANTENIMIENTO, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: true) on ButacaCache(mockButacaCache#118).remove(A1)
19:54:55.924 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#126
19:54:55.925 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#127
19:54:55.925 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#128
19:54:55.926 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#129
19:54:55.926 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#130
19:54:55.927 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#131
19:54:55.933 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for List name=child of mockButacaRepository#127#132
19:54:55.934 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Generando lista de butacas por defecto...
19:54:55.936 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering [Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: A2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: A3, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 2, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: A4, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 3, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: A5, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 4, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: A6, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 5, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: A7, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 6, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: B1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 1, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: B2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 1, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: B3, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 1, columna: 2, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: B4, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 1, columna: 3, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: B5, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 1, columna: 4, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: B6, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 1, columna: 5, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: B7, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 1, columna: 6, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: C1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 2, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: C2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 2, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: C3, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 2, columna: 2, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: C4, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 2, columna: 3, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: C5, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 2, columna: 4, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: C6, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 2, columna: 5, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: C7, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 2, columna: 6, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: D1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 3, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: D2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 3, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: D3, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 3, columna: 2, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: D4, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 3, columna: 3, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: D5, nombre: Butaca, tipo: Butaca, precio: 8.0, fila: 3, columna: 4, tipoButaca: VIP, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: D6, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 3, columna: 5, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: D7, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 3, columna: 6, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: E1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 4, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: E2, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 4, columna: 1, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: E3, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 4, columna: 2, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: E4, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 4, columna: 3, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: E5, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 4, columna: 4, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: E6, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 4, columna: 5, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), Butaca(id: E7, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 4, columna: 6, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false)] on ButacaRepository(mockButacaRepository#127).defaultListButacas()
19:54:55.940 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#133
19:54:55.941 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#134
19:54:55.941 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#135
19:54:55.942 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#136
19:54:55.942 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#137
19:54:55.942 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#138
19:54:55.945 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#137#139
19:54:55.948 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Unit name=child of mockComplementoCache#136#140
19:54:55.950 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Guardando complemento Complemento(id: 2, nombre: Agua, tipo: Complemento, precio: 2.0, stock: 20, categoria: BEBIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false)
19:54:55.951 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Complemento(id: 2, nombre: Agua, tipo: Complemento, precio: 2.0, stock: 20, categoria: BEBIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ComplementoRepository(mockComplementoRepository#137).save(Complemento(id: 2, nombre: Agua, tipo: Complemento, precio: 2.0, stock: 20, categoria: BEBIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.952 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering kotlin.Unit on ComplementoCache(mockComplementoCache#136).put(2, Complemento(id: 2, nombre: Agua, tipo: Complemento, precio: 2.0, stock: 20, categoria: BEBIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
19:54:55.961 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaCache name=mockButacaCache#141
19:54:55.962 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ButacaRepository name=mockButacaRepository#142
19:54:55.963 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageButacas name=mockButacaStorage#143
19:54:55.963 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoCache name=mockComplementoCache#144
19:54:55.964 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for ComplementoRepository name=mockComplementoRepository#145
19:54:55.964 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for StorageComplementos name=mockComplementoStorage#146
19:54:55.969 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Complemento name=child of mockComplementoRepository#145#147
19:54:55.972 [Test worker] DEBUG org.example.productos.services.productos.ProductoServiceImplKt -- Guardando complemento Complemento(id: 1, nombre: Palomitas, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false)
19:54:55.974 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Throwing org.example.productos.exceptions.ComplementoExceptions$ComplementoNotSavedException: Error al guardar complemento Complemento(id: 1, nombre: Palomitas, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false) on ComplementoRepository(mockComplementoRepository#145).save(Complemento(id: 1, nombre: Palomitas, tipo: Complemento, precio: 3.0, stock: 20, categoria: COMIDA, createdAt: 2024-04-28, updatedAt: null, isDeleted: false))
]]></system-out>
  <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\jleon\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.14.6\46e2545d7a97b6ccb195621650c5957279eb4812\byte-buddy-agent-1.14.6.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
