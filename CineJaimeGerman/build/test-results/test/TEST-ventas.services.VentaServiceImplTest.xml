<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ventas.services.VentaServiceImplTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2024-04-28T17:54:56" hostname="LAPTOP-3NHV45U1" time="0.115">
  <properties/>
  <testcase name="createVenta()" classname="ventas.services.VentaServiceImplTest" time="0.096"/>
  <testcase name="getById()" classname="ventas.services.VentaServiceImplTest" time="0.007"/>
  <testcase name="getById throws VentaNoEncontrada exception()" classname="ventas.services.VentaServiceImplTest" time="0.007"/>
  <system-out><![CDATA[19:54:56.460 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaRepository name=ventaRepository#148
19:54:56.512 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageHtmlCompraImpl name=ventaStorageHtmlCompra#149
19:54:56.555 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageHtmlDevolucionImpl name=ventaStorageHtmlDevolucion#150
19:54:56.585 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageJsonImpl name=ventaStorageJson#151
19:54:56.660 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Any name=child of ventaRepository#148#152
19:54:56.663 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Any name=child of ventaRepository#148#153
19:54:56.664 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Any name=child of ventaRepository#148#154
19:54:56.722 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Venta name=child of ventaRepository#148#155
19:54:56.723 [Test worker] DEBUG org.example.ventas.service.VentaServiceImplKt -- Creando venta: Venta(id=57c712fb-5531-4f33-a744-0fdb65cd9dcf, cliente=Cliente(id=1, nombre=test, email=test@gmail.com, numSocio=YYY999, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false), lineas=[LineaVenta(id=6468ccdd-abfc-425d-96c2-cb2753a42f94, producto=Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), tipoProducto=Butaca, cantidad=1, precio=5.0, createdAt=2024-04-28, updatedAt=2024-04-28)], fechaCompra=2024-04-28, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false)
19:54:56.724 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Ok(Cliente(id=1, nombre=test, email=test@gmail.com, numSocio=YYY999, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false)) on VentaRepository(ventaRepository#148).validateCliente-Zyo9ksc(Cliente(id=1, nombre=test, email=test@gmail.com, numSocio=YYY999, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false))
19:54:56.725 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Ok([LineaVenta(id=6468ccdd-abfc-425d-96c2-cb2753a42f94, producto=Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), tipoProducto=Butaca, cantidad=1, precio=5.0, createdAt=2024-04-28, updatedAt=2024-04-28)]) on VentaRepository(ventaRepository#148).validateLineas-Zyo9ksc([LineaVenta(id=6468ccdd-abfc-425d-96c2-cb2753a42f94, producto=Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), tipoProducto=Butaca, cantidad=1, precio=5.0, createdAt=2024-04-28, updatedAt=2024-04-28)])
19:54:56.726 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Ok([LineaVenta(id=6468ccdd-abfc-425d-96c2-cb2753a42f94, producto=Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), tipoProducto=Butaca, cantidad=1, precio=5.0, createdAt=2024-04-28, updatedAt=2024-04-28)]) on VentaRepository(ventaRepository#148).actualizarStock-Zyo9ksc([LineaVenta(id=6468ccdd-abfc-425d-96c2-cb2753a42f94, producto=Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), tipoProducto=Butaca, cantidad=1, precio=5.0, createdAt=2024-04-28, updatedAt=2024-04-28)])
19:54:56.726 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Venta(id=57c712fb-5531-4f33-a744-0fdb65cd9dcf, cliente=Cliente(id=1, nombre=test, email=test@gmail.com, numSocio=YYY999, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false), lineas=[LineaVenta(id=6468ccdd-abfc-425d-96c2-cb2753a42f94, producto=Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), tipoProducto=Butaca, cantidad=1, precio=5.0, createdAt=2024-04-28, updatedAt=2024-04-28)], fechaCompra=2024-04-28, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false) on VentaRepository(ventaRepository#148).save(Venta(id=57c712fb-5531-4f33-a744-0fdb65cd9dcf, cliente=Cliente(id=1, nombre=test, email=test@gmail.com, numSocio=YYY999, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false), lineas=[LineaVenta(id=6468ccdd-abfc-425d-96c2-cb2753a42f94, producto=Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), tipoProducto=Butaca, cantidad=1, precio=5.0, createdAt=2024-04-28, updatedAt=2024-04-28)], fechaCompra=2024-04-28, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false))
19:54:56.735 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaRepository name=ventaRepository#156
19:54:56.736 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageHtmlCompraImpl name=ventaStorageHtmlCompra#157
19:54:56.736 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageHtmlDevolucionImpl name=ventaStorageHtmlDevolucion#158
19:54:56.736 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageJsonImpl name=ventaStorageJson#159
19:54:56.739 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Venta name=child of ventaRepository#156#160
19:54:56.740 [Test worker] DEBUG org.example.ventas.service.VentaServiceImplKt -- Obteniendo venta por id: 67c712fb-5531-4f33-a744-0fdb65cd9dcf
19:54:56.741 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering Venta(id=67c712fb-5531-4f33-a744-0fdb65cd9dcf, cliente=Cliente(id=1, nombre=Jaime, email=jaime@gmail.com, numSocio=AAA111, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false), lineas=[LineaVenta(id=a067c4f6-011f-4f95-97ad-206164309c40, producto=Butaca(id: A1, nombre: Butaca, tipo: Butaca, precio: 5.0, fila: 0, columna: 0, tipoButaca: NORMAL, estadoButaca: ACTIVA, ocupacionButaca: LIBRE, createdAt: 2024-04-28, updatedAt: null, isDeleted: false), tipoProducto=Butaca, cantidad=1, precio=5.0, createdAt=2024-04-28, updatedAt=2024-04-28)], fechaCompra=2024-04-28, createdAt=2024-04-28, updatedAt=2024-04-28, isDeleted=false) on VentaRepository(ventaRepository#156).findById(67c712fb-5531-4f33-a744-0fdb65cd9dcf)
19:54:56.744 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaRepository name=ventaRepository#161
19:54:56.744 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageHtmlCompraImpl name=ventaStorageHtmlCompra#162
19:54:56.745 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageHtmlDevolucionImpl name=ventaStorageHtmlDevolucion#163
19:54:56.745 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for VentaStorageJsonImpl name=ventaStorageJson#164
19:54:56.749 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory -- Creating mockk for Venta name=child of ventaRepository#161#165
19:54:56.749 [Test worker] DEBUG org.example.ventas.service.VentaServiceImplKt -- Obteniendo venta por id: 57c712fb-5531-4f33-a744-0fdb65cd9dcf
19:54:56.749 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState -- Answering null on VentaRepository(ventaRepository#161).findById(57c712fb-5531-4f33-a744-0fdb65cd9dcf)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
